name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write   # needed if pushing to GHCR

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff==0.6.7 black==24.8.0
      - name: Ruff (lint+isort)
        run: ruff check .
      - name: Black (format check)
        run: black --check .

  test:
    needs: lint
    runs-on: ubuntu-latest
    env:
      # DVC via GDrive (only if you chose that path)
      GDRIVE_SA_JSON: ${{ secrets.GDRIVE_SA_JSON }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
      - name: Install app deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest==8.3.2 httpx==0.27.2 ruff==0.6.7
      - name: (Optional) Install DVC if .dvc/ exists
        if: ${{ hashFiles('.dvc/config') != '' }}
        run: |
          pip install "dvc[gdrive]==3.55.2"
      - name: (Optional) Configure DVC service account
        if: ${{ hashFiles('.dvc/config') != '' && env.GDRIVE_SA_JSON != '' }}
        run: |
          echo "$GDRIVE_SA_JSON" > sa.json
          export GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/sa.json" >> $GITHUB_ENV
      - name: (Optional) dvc pull artifacts
        if: ${{ hashFiles('.dvc/config') != '' }}
        run: |
          dvc pull -v || true   # don't fail whole job if remote not configured
          ls -R app/artifacts || true
      - name: Run tests
        run: pytest -q

  docker-build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push (GHCR) on main
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/voltas-api:latest
            ghcr.io/${{ github.repository_owner }}/voltas-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
